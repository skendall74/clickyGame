{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","selectedImage","id","alt","src","image","name","occupation","location","removeCard","Wrapper","children","Title","shuffle","array","i","length","j","Math","floor","random","_ref","App","state","count","score","selectedCards","_this","indexOf","push","console","log","handleIncrement","cardShuffle","alert","setState","cards","filter","card","_this2","this","components_Wrapper","components_Title","map","components_Card","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8wFAsCeA,MAjCb,SAAcC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,cAAcN,EAAMO,MAC7DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMQ,IAAKC,IAAKT,EAAMU,SAElCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBADF,IAC0BH,EAAMW,MAEhCV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BADF,IACgCH,EAAMY,YAEtCX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8BH,EAAMa,WAItCZ,EAAAC,EAAAC,cAAA,QACEE,QAAS,kBAAML,EAAMc,WAAWd,EAAMO,KACtCH,UAAU,UAFZ,oBClBGW,SAJG,SAACf,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMgB,YCG5BC,SAJC,SAACjB,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMgB,mBCGxC,SAASE,EAAQC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADDM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,MA0FMQ,6MApFbC,MAAQ,CACNC,MAAO,EACPC,MAAO,GACPC,cAAe,MAGjBzB,cAAgB,SAAAC,GACd,IAAIwB,EAAgBC,EAAKJ,MAAMG,cAE/B,QAAuC,IAA/BA,EAAcE,QAAQ1B,IAC5B,KAA0B,KAArByB,EAAKJ,MAAME,MAEdC,EAAcG,KAAK3B,GACnB4B,QAAQC,IAAIL,GAEZC,EAAKK,kBAELL,EAAKM,cACLH,QAAQC,IAAI,iBACZG,MAAM,YACNP,EAAKQ,SAAS,CACZV,MAAO,EACPC,cAAe,KAEjB,MAEF,KAAKC,EAAKQ,WACRL,QAAQC,IAAI,kBACZG,MAAM,gDACNP,EAAKQ,SAAS,CACZV,MAAO,EACPC,cAAe,SAOvBM,gBAAkB,WAEhBL,EAAKQ,SAAS,CAAEV,MAAOE,EAAKJ,MAAME,MAAQ,OAI5CQ,YAAc,WACZN,EAAKQ,SAAS,CAAEC,MAAOvB,EAAQuB,QAGjC3B,WAAa,SAAAP,GAEX,IAAMkC,EAAQT,EAAKJ,MAAMa,MAAMC,OAAO,SAAAC,GAAI,OAAIA,EAAKpC,KAAOA,IAE1DyB,EAAKQ,SAAS,CAAEC,mFAIT,IAAAG,EAAAC,KACP,OACE5C,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAD,oBACA9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,oBAAY0C,KAAKjB,MAAME,SAG3B7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZyC,KAAKjB,MAAMa,MAAMO,IAAI,SAAAL,GAAI,OACxB1C,EAAAC,EAAAC,cAAC8C,EAAD,CACEnC,WAAY8B,EAAK9B,WACjBP,GAAIoC,EAAKpC,GACTI,KAAMgC,EAAKhC,KACXD,MAAOiC,EAAKjC,MACZE,WAAY+B,EAAK/B,WACjBC,SAAU8B,EAAK9B,SACfL,IAAKmC,EAAKnC,IACVF,cAAesC,EAAKtC,2BA7EhB4C,mBCXlBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4072e465.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\n  // The render method returns the JSX that should be rendered\n  function Card(props) {\n    return (\n      <div className=\"card\">\n        <div className=\"card\" onClick={() => props.selectedImage(props.id)}>\n          <div className=\"img-container\">\n            <img alt={props.alt} src={props.image} />\n          </div>\n          <div className=\"content\">\n            <ul>\n              <li>\n                <strong>Name:</strong> {props.name}\n              </li>\n              <li>\n                <strong>Occupation:</strong> {props.occupation}\n              </li>\n              <li>\n                <strong>Location:</strong> {props.location}\n              </li>\n            </ul>\n\n            <span\n              onClick={() => props.removeCard(props.id)}\n              className=\"remove\"\n            >\n              ùòÖ\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default Card;","import React from \"react\";\nimport \"./style.css\";\n\n  const Wrapper = (props) => {\n    return <div className=\"wrapper\">{props.children}</div>;\n  };\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n  const Title = (props) => {\n    return <h1 className=\"title\">{props.children}</h1>;\n  };\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport cards from \"./cards.json\";\n\n// shuffle function from stackoverflow - https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    count: 0,\n    score: \"\",\n    selectedCards: []\n  };\n\n  selectedImage = id => {\n    let selectedCards = this.state.selectedCards;\n    // eslint-disable-next-line default-case\n    switch (selectedCards.indexOf(id) === -1) {\n      case this.state.score === 11:\n        // push that id into that id into the array to be stored\n        selectedCards.push(id);\n        console.log(selectedCards);\n        // run the score function\n        this.handleIncrement();\n        // run the reshuffle function after each click\n        this.cardShuffle();\n        console.log(\"selected ONCE\");\n        alert(\"You won!\");\n        this.setState({\n          score: 0,\n          selectedCards: []\n        });\n        break;\n\n      case this.setState():\n        console.log(\"selected TWICE\");\n        alert(\"Sorry you LOST! You clicked an image twice!!\");\n        this.setState({\n          score: 0,\n          selectedCards: []\n        });\n        break;\n    }\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  // shuffle up images\n  cardShuffle = () => {\n    this.setState({ cards: shuffle(cards) });\n  };\n\n  removeCard = id => {\n    // Filter this.state.cards for cards with an id not equal to the id being removed\n    const cards = this.state.cards.filter(card => card.id !== id);\n    // Set this.state.cards equal to the new cards array\n    this.setState({ cards });\n  };\n\n  // Map over this.state.friends and render a Card component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <h1>Score: {this.state.score}</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          {this.state.cards.map(card => (\n            <Card\n              removeCard={this.removeCard}\n              id={card.id}\n              name={card.name}\n              image={card.image}\n              occupation={card.occupation}\n              location={card.location}\n              alt={card.alt}\n              selectedImage={this.selectedImage}\n            />\n          ))}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}