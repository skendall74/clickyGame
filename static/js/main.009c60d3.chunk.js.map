{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","selectedImage","id","alt","src","image","name","occupation","location","Wrapper","children","Title","shuffle","array","i","length","j","Math","floor","random","_ref","App","state","count","score","highScore","selectedCards","_this","indexOf","push","handleIncrement","cardShuffle","alert","setState","console","log","cards","removeCard","filter","card","_this2","this","components_Wrapper","components_Title","map","components_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.009c60d3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// The render method returns the JSX that should be rendered\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"card\" onClick={() => props.selectedImage(props.id)}>\n        <div className=\"img-container\">\n          <img alt={props.alt} src={props.image} />\n        </div>\n        <div className=\"content\">\n          <ul>\n            <li>\n              <strong>Name:</strong> {props.name}\n            </li>\n            <li>\n              <strong>Occupation:</strong> {props.occupation}\n            </li>\n            <li>\n              <strong>Location:</strong> {props.location}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\n  const Wrapper = (props) => {\n    return <div className=\"wrapper\">{props.children}</div>;\n  };\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n  const Title = (props) => {\n    return <h1 className=\"title\">{props.children}</h1>;\n  };\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport cards from \"./cards.json\";\n\n// shuffle function from stackoverflow - https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    count: 0,\n    score: 0,\n    highScore: 0,\n    selectedCards: []\n  };\n\n  selectedImage = id => {\n    let selectedCards = this.state.selectedCards;\n    let score = this.state.score;\n    let highScore = this.state.highScore;\n    // Set this.state.cards equal to the new cards array\n    // if the clicked image has an id of the indexed cards\n    switch (selectedCards) {\n      case selectedCards.indexOf(id) === -1:\n        selectedCards.push(id);\n        // run the score function\n        this.handleIncrement();\n        // run the reshuffle function after each click\n        this.cardShuffle();\n        break;\n\n      case this.state.score === 12:\n        alert(\"You WON!\");\n        this.setState({\n          score: 0,\n          selectedCards: []\n        });\n        break;\n\n      case this.setState:\n        this.setState({\n          score: 0,\n          selectedCards: []\n        });\n        alert(\"YOU LOST! You clicked an image twice!\");\n        break;\n\n      case score > highScore:\n        this.setState({\n          highScore: score\n        });\n        break;\n      default:\n    }\n   \n    if (selectedCards.indexOf(id) === -1) {\n      // push that id into that id into the array to be stored\n      selectedCards.push(id);\n      // run the score function\n      this.handleIncrement();\n      // run the reshuffle function after each click\n      this.cardShuffle();\n    } else if (this.state.score === 12) {\n      alert(\"You WON!\");\n      this.setState({\n        score: 0,\n        selectedCards: []\n      });\n    } else {\n      this.setState({\n        score: 0,\n        selectedCards: []\n      });\n      alert(\"YOU LOST! You clicked an image twice!\");\n    }\n\n    if (score > highScore) {\n      this.setState({\n        highScore: score\n      });\n    }\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ score: this.state.score + 1 }, () => {\n      console.log(this.state.score);\n    });\n  };\n\n  // shuffle up images\n  cardShuffle = () => {\n    this.setState({ cards: shuffle(cards) });\n  };\n\n  removeCard = id => {\n    // Filter this.state.cards for cards with an id not equal to the id being removed\n    const cards = this.state.cards.filter(card => card.id !== id);\n    // Set this.state.cards equal to the new cards array\n    this.setState({ cards });\n  };\n\n  // Map over this.state.friends and render a Card component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <h1>High Score: {this.state.highScore}</h1>\n            <h1>Score: {this.state.score}</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          {cards.map(cards => (\n            <Card\n              key={cards.id}\n              id={cards.id}\n              name={cards.name}\n              image={cards.image}\n              occupation={cards.occupation}\n              location={cards.location}\n              alt={cards.alt}\n              selectedImage={this.selectedImage}\n            />\n          ))}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}